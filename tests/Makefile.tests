SHELL := bash
IRIS ?= $(HOME)/.iris
CC				:= gcc
CXX				:= g++
INCLUDE		+= -I$(IRIS)/include
CFLAGS		+= ${INCLUDE} -g -std=gnu99 ${EXT_INCLUDE}
CXXFLAGS	+= ${INCLUDE} -g -std=c++11 ${EXT_INCLUDE}
LDFLAGS		+= -liris -lpthread -ldl ${EXT_LDFLAGS}
LDINC			+= -L${IRIS}/lib -L${IRIS}/lib64
NVCC			?= $(CUDA_PATH)/bin/nvcc
HIPCC			?= $(ROCM_PATH)/bin/hipcc
NVCC_TEST       := $(shell which $(NVCC))
HIPCC_TEST       := $(shell which $(HIPCC))
ifeq (1, ${CPP})
$(TEST):$(TEST).cpp
	rm -f $(TEST)
	$(CXX) $(CXXFLAGS) -o $@ $^ $(LDINC) $(LDFLAGS)
else
$(TEST):$(TEST).c
	rm -f $(TEST)
	$(CC) $(CFLAGS) -o $@ $^ $(LDINC) $(LDFLAGS) -Dfalse=0 -Dtrue=1
endif

ifeq ($(NVCC_TEST),)
kernel.ptx: kernel.cu
	@echo "No NVCC compiler found"
else
kernel.ptx: kernel.cu
	$(NVCC) -ptx $^
endif

ifeq ($(HIPCC_TEST),)
kernel.hip: kernel.hip.cpp
	@echo "No HIPCC compiler found"
else
kernel.hip: kernel.hip.cpp
	$(HIPCC) --genco -o $@ $^
endif

clean:
	rm -f $(TEST) kernel.ptx kernel.hip kernel.openmp.so
